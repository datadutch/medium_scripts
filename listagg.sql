-- query 1
-- this query shows the customers with their total sales and a rank
select o_custkey customer
, sum(o_totalprice) total_sales
, row_number() over (order by total_sales desc) rank_c
from snowflake_sample_data.tpch_sf1.orders o
join snowflake_sample_data.tpch_sf1.customer c
on o.o_custkey = c.c_custkey
group by all
order by rank_c;

-- query 2
-- using query 1 and a cte collecting the orders with a rank
with larg_cust as (
select o_custkey customer
, sum(o_totalprice) total_sales_c
, row_number() over (order by sum(o_totalprice) desc) rank_c
from snowflake_sample_data.tpch_sf1.orders o
join snowflake_sample_data.tpch_sf1.customer c
on o.o_custkey = c.c_custkey
group by all
)
, larg_orders as (
select o_custkey customer
, o_orderkey orderk
, o_totalprice total_sales_o
, row_number() over (partition by customer order by sum(total_sales_o) desc) rank_o
from snowflake_sample_data.tpch_sf1.orders o
join snowflake_sample_data.tpch_sf1.customer c
on o.o_custkey = c.c_custkey
group by all
)
select rank_c, larg_cust.customer, orderk, total_sales_c, total_sales_o from larg_cust
join larg_orders
on larg_cust.customer = larg_orders.customer
where rank_c <= 5
and rank_o <= 5
order by 1,5 desc
;

-- query 3
-- putting the results in a row with listagg
with larg_cust as (
select o_custkey customer
, sum(o_totalprice) total_sales_c
, row_number() over (order by sum(o_totalprice) desc) rank_c
from snowflake_sample_data.tpch_sf1.orders o
join snowflake_sample_data.tpch_sf1.customer c
on o.o_custkey = c.c_custkey
group by all
)
, larg_orders as (
select o_custkey customer
, o_orderkey orderk
, o_totalprice total_sales_o
, row_number() over (partition by customer order by sum(total_sales_o) desc) rank_o
from snowflake_sample_data.tpch_sf1.orders o
join snowflake_sample_data.tpch_sf1.customer c
on o.o_custkey = c.c_custkey
group by all
)
select rank_c, larg_cust.customer, round(total_sales_c,0) total_sales_c, listagg(round(total_sales_o,0),', ') largest_ordersizes from larg_cust
join larg_orders
on larg_cust.customer = larg_orders.customer
where rank_c <= 5
and rank_o <= 5
group by all
order by rank_c;

-- query 4 
-- the copilot version after some prompts & refinements

WITH customer_orders AS (
  SELECT
    customer.c_name,
    orders.o_totalprice,
    ROW_NUMBER() OVER (
      PARTITION BY customer.c_name
      ORDER BY
        orders.o_totalprice DESC
    ) AS order_rank
  FROM
    snowflake_sample_data.tpch_sf1.orders
    JOIN snowflake_sample_data.tpch_sf1.customer ON orders.o_custkey = customer.c_custkey
),
top_5_orders AS (
  SELECT
    customer_orders.c_name,
    customer_orders.o_totalprice
  FROM
    customer_orders
  WHERE
    customer_orders.order_rank <= 5
)
SELECT
  top_5_orders.c_name,
  MAX(top_5_orders.o_totalprice) AS largest_order
FROM
  top_5_orders
GROUP BY
  top_5_orders.c_name
ORDER BY
  largest_order DESC
LIMIT
  5;
/*
Generated by Snowflake Copilot based on:
"tell me about this query

select o_custkey customer
, sum(o_totalprice) tot..."
...
↪ "can you show me the top 5 customers with the 5 largest orders per customer...."
↪ "i would like to see the amount of the 5 largest orders for each top 5 custo..."
*/
WITH customer_orders AS (
  SELECT
    customer.c_name,
    orders.o_totalprice,
    ROW_NUMBER() OVER (
      PARTITION BY customer.c_name
      ORDER BY
        orders.o_totalprice DESC
    ) AS order_rank
  FROM
    snowflake_sample_data.tpch_sf1.orders
    JOIN snowflake_sample_data.tpch_sf1.customer ON orders.o_custkey = customer.c_custkey
),
top_5_orders AS (
  SELECT
    customer_orders.c_name,
    customer_orders.o_totalprice,
    customer_orders.order_rank
  FROM
    customer_orders
  WHERE
    customer_orders.order_rank <= 5
)
SELECT
  top_5_orders.c_name,
  top_5_orders.o_totalprice
FROM
  top_5_orders
WHERE
  top_5_orders.c_name IN (
    SELECT
      top_5_orders.c_name
    FROM
      top_5_orders
    GROUP BY
      top_5_orders.c_name
    ORDER BY
      SUM(top_5_orders.o_totalprice) DESC
    LIMIT
      5
  )
ORDER BY
  top_5_orders.c_name,
  top_5_orders.order_rank;
/*
Generated by Snowflake Copilot based on:
"tell me about this query

select o_custkey customer
, sum(o_totalprice) tot..."
...
↪ "i would like to see the amount of the 5 largest orders for each top 5 custo..."
↪ "this looks perfect, can you now display only one row per customer and add t..."
*/
WITH customer_orders AS (
  SELECT
    customer.c_name,
    orders.o_totalprice,
    ROW_NUMBER() OVER (
      PARTITION BY customer.c_name
      ORDER BY
        orders.o_totalprice DESC
    ) AS order_rank
  FROM
    snowflake_sample_data.tpch_sf1.orders
    JOIN snowflake_sample_data.tpch_sf1.customer ON orders.o_custkey = customer.c_custkey
),
top_5_orders AS (
  SELECT
    customer_orders.c_name,
    customer_orders.o_totalprice,
    customer_orders.order_rank
  FROM
    customer_orders
  WHERE
    customer_orders.order_rank <= 5
)
SELECT
  *
FROM
  (
    SELECT
      top_5_orders.c_name,
      top_5_orders.o_totalprice,
      top_5_orders.order_rank
    FROM
      top_5_orders
  ) PIVOT (
    MAX(o_totalprice) FOR order_rank IN (1, 2, 3, 4, 5)
  )
ORDER BY
  c_name;
/*
Generated by Snowflake Copilot based on:
"tell me about this query

select o_custkey customer
, sum(o_totalprice) tot..."
...
↪ "the error message i now get is

Window function [ROW_NUMBER() OVER (PARTITI..."
↪ "can you show me the top 5 customers with the 5 largest orders per customer...."
*/
WITH customer_orders AS (
  SELECT
    customer.c_name,
    orders.o_totalprice,
    ROW_NUMBER() OVER (
      PARTITION BY customer.c_name
      ORDER BY
        orders.o_totalprice DESC
    ) AS order_rank
  FROM
    snowflake_sample_data.tpch_sf1.orders
    JOIN snowflake_sample_data.tpch_sf1.customer ON orders.o_custkey = customer.c_custkey
),
top_5_orders AS (
  SELECT
    customer_orders.c_name,
    customer_orders.o_totalprice
  FROM
    customer_orders
  WHERE
    customer_orders.order_rank <= 5
)
SELECT
  top_5_orders.c_name,
  MAX(top_5_orders.o_totalprice) AS largest_order
FROM
  top_5_orders
GROUP BY
  top_5_orders.c_name
ORDER BY
  largest_order DESC
LIMIT
  5;
/*
Generated by Snowflake Copilot based on:
"tell me about this query

select o_custkey customer
, sum(o_totalprice) tot..."
...
↪ "can you show me the top 5 customers with the 5 largest orders per customer...."
↪ "i would like to see the amount of the 5 largest orders for each top 5 custo..."
*/
WITH customer_orders AS (
  SELECT
    customer.c_name,
    orders.o_totalprice,
    ROW_NUMBER() OVER (
      PARTITION BY customer.c_name
      ORDER BY
        orders.o_totalprice DESC
    ) AS order_rank
  FROM
    snowflake_sample_data.tpch_sf1.orders
    JOIN snowflake_sample_data.tpch_sf1.customer ON orders.o_custkey = customer.c_custkey
),
top_5_orders AS (
  SELECT
    customer_orders.c_name,
    customer_orders.o_totalprice,
    customer_orders.order_rank
  FROM
    customer_orders
  WHERE
    customer_orders.order_rank <= 5
)
SELECT
  top_5_orders.c_name,
  top_5_orders.o_totalprice
FROM
  top_5_orders
WHERE
  top_5_orders.c_name IN (
    SELECT
      top_5_orders.c_name
    FROM
      top_5_orders
    GROUP BY
      top_5_orders.c_name
    ORDER BY
      SUM(top_5_orders.o_totalprice) DESC
    LIMIT
      5
  )
ORDER BY
  top_5_orders.c_name,
  top_5_orders.order_rank;
/*
Generated by Snowflake Copilot based on:
"tell me about this query

select o_custkey customer
, sum(o_totalprice) tot..."
...
↪ "i would like to see the amount of the 5 largest orders for each top 5 custo..."
↪ "this looks perfect, can you now display only one row per customer and add t..."
*/
WITH customer_orders AS (
  SELECT
    customer.c_name,
    orders.o_totalprice,
    ROW_NUMBER() OVER (
      PARTITION BY customer.c_name
      ORDER BY
        orders.o_totalprice DESC
    ) AS order_rank
  FROM
    snowflake_sample_data.tpch_sf1.orders
    JOIN snowflake_sample_data.tpch_sf1.customer ON orders.o_custkey = customer.c_custkey
),
top_5_orders AS (
  SELECT
    customer_orders.c_name,
    customer_orders.o_totalprice,
    customer_orders.order_rank
  FROM
    customer_orders
  WHERE
    customer_orders.order_rank <= 5
)
SELECT
  *
FROM
  (
    SELECT
      top_5_orders.c_name,
      top_5_orders.o_totalprice,
      top_5_orders.order_rank
    FROM
      top_5_orders
  ) PIVOT (
    MAX(o_totalprice) FOR order_rank IN (1, 2, 3, 4, 5)
  )
ORDER BY
  c_name;
/*
Generated by Snowflake Copilot based on:
"tell me about this query

select o_custkey customer
, sum(o_totalprice) tot..."
...
↪ "this looks perfect, can you now display only one row per customer and add t..."
↪ "i only want to see the 5 customers with the highest total sales"
*/
WITH customer_sales AS (
  SELECT
    customer.c_name,
    SUM(orders.o_totalprice) AS total_sales
  FROM
    orders
    JOIN customer ON orders.o_custkey = customer.c_custkey
  GROUP BY
    customer.c_name
)
SELECT
  *
FROM
  customer_sales
ORDER BY
  customer_sales.total_sales DESC
LIMIT
  5;
/*
Generated by Snowflake Copilot based on:
"tell me about this query

select o_custkey customer
, sum(o_totalprice) tot..."
...
↪ "i would like to see the amount of the 5 largest orders for each top 5 custo..."
↪ "this looks perfect, can you now display only one row per customer and add t..."
*/
WITH customer_orders AS (
  SELECT
    customer.c_name,
    orders.o_totalprice,
    ROW_NUMBER() OVER (
      PARTITION BY customer.c_name
      ORDER BY
        orders.o_totalprice DESC
    ) AS order_rank
  FROM
    snowflake_sample_data.tpch_sf1.orders
    JOIN snowflake_sample_data.tpch_sf1.customer ON orders.o_custkey = customer.c_custkey
),
top_5_orders AS (
  SELECT
    customer_orders.c_name,
    customer_orders.o_totalprice,
    customer_orders.order_rank
  FROM
    customer_orders
  WHERE
    customer_orders.order_rank <= 5
)
SELECT
  *
FROM
  (
    SELECT
      top_5_orders.c_name,
      top_5_orders.o_totalprice,
      top_5_orders.order_rank
    FROM
      top_5_orders
  ) PIVOT (
    MAX(o_totalprice) FOR order_rank IN (1, 2, 3, 4, 5)
  )
ORDER BY
  c_name;
